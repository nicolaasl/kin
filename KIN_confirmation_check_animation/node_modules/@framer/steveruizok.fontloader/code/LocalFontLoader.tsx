import * as React from 'react'
import { PropertyControls, ControlType, FrameProperties } from 'framer'
import { string } from 'prop-types'

const style: React.CSSProperties = {
	height: '100%',
	display: 'flex',
	alignItems: 'center',
	flexDirection: 'column',
	justifyContent: 'center',
	textAlign: 'center',
	color: '#0099ff',
	background: 'white',
	boxShadow: '0 3px 10px rgba(0,0,0,.25)',
	borderRadius: '10px',
	overflow: 'hidden',
	padding: '20px',
	fontSize: '12px',
	fontFamily: 'Helvetica',
	// Custom font here:
}

// Define type of property
interface Props extends FrameProperties {
	fontFile: any
	fontName: string
	fontWeight: number
	fontUrl: string
	source: string
}

export class CustomFontLoader extends React.Component<Props> {
	// Set default properties
	static defaultProps = {
		fontName: 'Helvetica',
		fontFile: null,
		fontWeight: 500,
		fontUrl: null,
		source: 'local',
	}

	// Items shown in property panel
	static propertyControls: PropertyControls = {
		fontName: { type: ControlType.String, title: 'Name' },
		fontWeight: { type: ControlType.String, title: 'Weight' },
		source: {
			type: ControlType.SegmentedEnum,
			title: 'Source',
			options: ['local', 'web'],
			optionTitles: ['Local', 'Web'],
			defaultValue: 'local',
		},
		fontUrl: {
			type: ControlType.String,
			title: 'Url',
			hidden: ({ source }) => source !== 'web',
		},
		fontFile: {
			type: ControlType.File,
			title: 'File',
			allowedFileTypes: ['ttf', 'otf', 'woff'],
			hidden: ({ source }) => source !== 'local',
		},
	}

	componentDidMount() {}

	render() {
		const { fontFile, fontUrl, fontWeight, fontName, source } = this.props

		return (
			<div style={{ ...style, fontFamily: fontName || 'Helvetica' }}>
				{source === 'web' && fontUrl && (
					<style>
						<link href={fontUrl} rel="stylesheet" type="text/css" />
					</style>
				)}
				{source === 'local' && fontFile && (
					<style>{`
          @font-face {
            font-family: ${fontName};
            ${this.props.fontWeight && `font-weight: ${fontWeight};`}
            src: url('${fontFile}');
            }`}</style>
				)}
				<p>
					For webfonts, enter the font's name and a webfont URL. For local
					files, select a font file using the File control. Enter the font's
					name using the Name control.
				</p>
				<p>
					You can then use this font anywhere in your project. They'll work in
					web previews, too.
				</p>
				<p>To import multiple fonts, use more than one of these components.</p>
			</div>
		)
	}
}
